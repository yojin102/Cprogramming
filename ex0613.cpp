#include <stdio.h>

int main()
{
	// [] 배열 == 동일한 데이터타입을 묶어서 사용
	int a = 100;

	// 사이즈 == 초기값 개수 (동일)
	// int b[5] = { 10,20,30,40,50 };	// 사이즈 지정, 초기값 부여

	// 사이즈 > 초기값 개수 (나머지 배열칸에는 기본값으로 0넣음)
	int b[10] = { 10,20,30,40,50 };

	// 사이즈 < 초기값 개수 (컴파일 에러) "이니셜라이저가 너무 많습니다." == 초기 할당값 개수가 많다.

	//int c[10];
	//int d[] = { 10,20,30 };
	//int e[];	// 사이즈 지정X, 초기값 부여 X 경고

	printf("%d\n", b[3]);
	b[1] = 1000;

	printf("\n%d  %d\n", sizeof(int), sizeof(b));


	// for (int i = 0; i < 5; i++) // 상수값 (5)를 코드 중간에 사용하는 것은 좋은 습관이 아님
	// 인덱스번호보다 큰 번호로 접근하면 정상적이지 않은 데이터로 처리
	for (int i = 0; i < sizeof(b) / sizeof(int); i++)
	{
		printf("%d\n", b[i]);
	}

	// ---------------------- 문자 배열
	// char ch[10] = { 'a', 'b', 'c' };
	char ch[10] = { '최','요','진' };

	for (int i = 0; i < (sizeof(ch) / sizeof(char)); i++)
	{
		// printf("%c", ch[i]);
		printf("%s", ch);
	}

	// 2차원배열
	int arr[3][4] = { { 1,2,3,4 }, { 1,3,5,7 }, { 2,4,6,8 } };
	printf("\n%d\n", arr[2][3]);
	arr[2][1] = 369;

	// 2차원배열 출력 -- 중첩반복문 for(){for(){}}
	for (int i = 0; i < 3; i++)	// 행 기준으로
	{
		for (int j = 0; j < 4; j++)	// 열 기준으로
		{
			printf("%d  ", arr[i][j]);
		}
		printf("\n");
	}

	// 3차원 배열
	// int aaa[2][3][4] = {};


	return 0;
}